exit
session[:user_id]
user.id
exit
user
exit
rails_blob_path(manny.avatar, only_path: true)
rails_blob_path(manny.avatar)
manny.avatar
manny = User.find_by(user_name: 'Manny')
self.avatar.attached?
rails_blob_path(self.avatar)
rails_blob_path(self.avatar, only_path: true)
:avatar
self.avatar
def avatar
        rails_blob_path(self.avatar, only_path: true) if self.avatar.attached?
      end
def avatar
   5:     rails_blob_path(self.avatar, only_path: true) if self.avatar.attached?
   6:   end
avatar
exit
ClassifiedForSale.create!(for_sale_params)
for_sale_params
params
exit
params
exit
invalid.record.errors
invalid.record
invalid
invalid.full_message
invalid.full_messages
invalid.response
invalid
exit
self
exit
self
exit
self
exit
rails_blob_path(self.avatar, only_path: true)
ap self
self
self.avatar.attached?
self.avatar
self
exit
ap x
x
exit
ap x
exit
ap x
x["user"] = item.user
x = item.attributes
item.attributes
item.user
item
exit
items.first.user
items.first
item.first
exit
ap data_array
data_array
exit
ap ClassifiedCategory.all
ClassifiedCategory.all
ap items.each {|item| {item: item, pic: item.pic}}
items.each {|item| {item: item, pic: item.pic}}
items.each {|item| {item: item, pic: item.pic}
items.each do
exit
ap items.each {|item| item.attributes}
items.each {|item| item.attributes}
items.each {item => item.attributes}
items.to_a.map(item => item.attributes)
items.to_a
items.array?
items.map(item => item.attributes)
ap items
items
exit
ap params
params
user
exit
params[:user]
params
exit
params
exit
params[:id]
params
exit
params
exit
params
exit
user
exit
rails_blob_path(user.avatar)
avatar
user.avatar
user
avatar
User.first.avatar.attached?
user.avatar.attached?
exit
ap user.avatar
user.avatar
exit
params[:password]
user
params
exit
ClassifiedForSale.where(classified_category_id: params[:classified_category_id])
params
self
exit
upright
upright.id
exit
self.object.user
exit
ap self.object.sub_forum
ap self.sub_forum
ap self.object
ap self
self
exit
params[:forum_topic_id]
params
exit
ap self
exit
ap user
user
